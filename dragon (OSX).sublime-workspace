{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"colo",
				"colorVal"
			],
			[
				"Safe",
				"SafeRelease"
			],
			[
				"char",
				"charsetName"
			],
			[
				"par",
				"parentFile"
			],
			[
				"lin",
				"linked_modules"
			],
			[
				"sou",
				"sources"
			],
			[
				"S",
				"SafeDelete"
			],
			[
				"Audio",
				"AudioClip"
			],
			[
				"de",
				"destroy"
			],
			[
				"dra",
				"dragon3d"
			],
			[
				"dr",
				"dragon3d"
			],
			[
				"Game",
				"GameException"
			],
			[
				"in",
				"include"
			],
			[
				"by",
				"bytes"
			],
			[
				"sk",
				"skiped"
			],
			[
				"a",
				"available"
			],
			[
				"mark",
				"markSupported"
			],
			[
				"Inpu",
				"InputStream"
			],
			[
				"Inp",
				"InputStream"
			],
			[
				"AUdio",
				"AudioFormat"
			],
			[
				"Adi",
				"AudioFormat"
			],
			[
				"Au",
				"AudioFormat"
			],
			[
				"out",
				"output_height"
			],
			[
				"ro",
				"row_pointer"
			],
			[
				"ou",
				"output_scanline"
			],
			[
				"un",
				"uint32_t"
			],
			[
				"Out",
				"OutputStream"
			],
			[
				"Buff",
				"Buffer"
			],
			[
				"Io",
				"IOException"
			],
			[
				"row",
				"row_stride"
			],
			[
				"getPi",
				"getPixelData"
			],
			[
				"Co",
				"ColorModel"
			],
			[
				"JPE",
				"JPEGImageReader"
			],
			[
				"Imag",
				"ImageIORegistry"
			],
			[
				"String",
				"StringBuilder"
			],
			[
				"Input",
				"InputStreamReader"
			],
			[
				"buf",
				"bufSize"
			],
			[
				"XMLD",
				"XMLDocument"
			],
			[
				"Output",
				"OutputStreamWriter"
			],
			[
				"com",
				"compact"
			],
			[
				"get",
				"getDocumentFactory"
			],
			[
				"Dragon",
				"DragonClass"
			],
			[
				"json",
				"jsonObj"
			],
			[
				"sub",
				"subJsonObj2"
			],
			[
				"key",
				"key_length"
			],
			[
				"u",
				"utf8Path"
			],
			[
				"na",
				"nativeFileHandle"
			],
			[
				"tok",
				"tokens"
			],
			[
				"to",
				"tokens"
			],
			[
				"re",
				"result"
			],
			[
				"sys",
				"sysPropMapInit"
			],
			[
				"fil",
				"fileNames"
			],
			[
				"thr",
				"threads"
			],
			[
				"sha",
				"shaderSrc"
			],
			[
				"Matrix",
				"Matrix4x4"
			],
			[
				"lo",
				"localPosition"
			],
			[
				"an",
				"angle"
			],
			[
				"I",
				"IDENTITY"
			],
			[
				"tr",
				"translate"
			],
			[
				"M",
				"Matrix4x4"
			],
			[
				"gam",
				"gameObject"
			],
			[
				"co",
				"component"
			],
			[
				"ma",
				"material"
			],
			[
				"game",
				"gameObject"
			],
			[
				"ca",
				"cameras"
			],
			[
				"pi",
				"pixelRect"
			],
			[
				"ind",
				"index"
			],
			[
				"len",
				"lengthSquared"
			],
			[
				"bo",
				"bottom"
			],
			[
				"h",
				"height"
			],
			[
				"outpu",
				"outputDevice"
			],
			[
				"f",
				"framework"
			],
			[
				"getCurr",
				"getCurrentScene"
			],
			[
				"can",
				"canvas"
			],
			[
				"c",
				"canvas"
			],
			[
				"upd",
				"updater"
			],
			[
				"up",
				"updater"
			],
			[
				"str",
				"str2"
			],
			[
				"it",
				"Iterator"
			],
			[
				"s",
				"semaphore"
			],
			[
				"def",
				"defaultHandlers"
			],
			[
				"for",
				"formatStr"
			],
			[
				"Log",
				"LogManager"
			],
			[
				"sta",
				"stackSize"
			],
			[
				"isE",
				"isEnableInfo"
			],
			[
				"st",
				"startup"
			],
			[
				"Fra",
				"FrameHandler"
			],
			[
				"geti",
				"getArtifactID"
			],
			[
				"inst",
				"installDependencies"
			],
			[
				"doubl",
				"doubleVal"
			],
			[
				"ret",
				"retType02"
			],
			[
				"type",
				"type_name"
			],
			[
				"arg",
				"argv"
			],
			[
				"typ",
				"typeName"
			],
			[
				"sign",
				"sign_size"
			],
			[
				"pa",
				"parameterTypes"
			],
			[
				"p",
				"parameterTypes"
			],
			[
				"con",
				"constructors"
			],
			[
				"me",
				"methods"
			],
			[
				"meth",
				"methodName"
			],
			[
				"si",
				"sign"
			],
			[
				"ne",
				"next_param_token"
			],
			[
				"sim",
				"simpleName"
			],
			[
				"class",
				"classLoader"
			],
			[
				"spa",
				"spaces"
			],
			[
				"sym",
				"symbol"
			],
			[
				"sy",
				"symbol"
			],
			[
				"fre",
				"free_export_symbol"
			],
			[
				"fr",
				"free_name_space"
			],
			[
				"r",
				"resolve"
			],
			[
				"cl",
				"classTree"
			],
			[
				"num",
				"num_offset"
			],
			[
				"nu",
				"num_offset"
			],
			[
				"nam",
				"name_len"
			],
			[
				"im",
				"image_path"
			],
			[
				"is",
				"is_64bit_image"
			],
			[
				"lib",
				"librarys"
			],
			[
				"res",
				"result"
			],
			[
				"find",
				"findClass"
			],
			[
				"pack",
				"packageName"
			],
			[
				"pr",
				"procAddress"
			],
			[
				"sett",
				"setter_name"
			],
			[
				"Sym",
				"SymTestBean2"
			],
			[
				"m_p",
				"m_pFunction"
			],
			[
				"te",
				"testVal1"
			],
			[
				"set",
				"setBytePtr2"
			],
			[
				"sig",
				"signature"
			],
			[
				"push",
				"push_back"
			]
		]
	},
	"buffers":
	[
		{
			"file": "dragon/src/dragonx/image/io/plugins/gif/GIFImageReader.cc",
			"settings":
			{
				"buffer_size": 8851,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dragon/src/dragonx/image/io/plugins/tga/TGAImageReader.cc",
			"settings":
			{
				"buffer_size": 5680,
				"line_ending": "Unix"
			}
		},
		{
			"file": "third_party/libtga-ex-1.0.0/src/tga.c",
			"settings":
			{
				"buffer_size": 3364,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dragon/src/dragonx/image/BufferedImage.cc",
			"settings":
			{
				"buffer_size": 4998,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dragon/src/dragon/lang/Object.cc",
			"settings":
			{
				"buffer_size": 2976,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dragon/src/dragonx/image/io/plugins/bmp/BMPImageWriter.cc",
			"settings":
			{
				"buffer_size": 15001,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dragon/src/dragonx/image/io/plugins/jpeg/JPEGImageReader.cc",
			"settings":
			{
				"buffer_size": 7023,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dragon/test/dragonx/image/io/ImageIOTest.cc",
			"settings":
			{
				"buffer_size": 21302,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dragon/src/dragonx/image/io/plugins/gif/GIFImageWriter.cc",
			"settings":
			{
				"buffer_size": 17910,
				"line_ending": "Unix"
			}
		},
		{
			"file": "third_party/giflib-4.2.3/lib/egif_lib.c",
			"settings":
			{
				"buffer_size": 37434,
				"line_ending": "Unix"
			}
		},
		{
			"file": "third_party/giflib-4.2.3/lib/gifalloc.c",
			"settings":
			{
				"buffer_size": 14508,
				"line_ending": "Unix"
			}
		},
		{
			"file": "third_party/libtga-ex-1.0.0/src/tgaread.c",
			"settings":
			{
				"buffer_size": 7511,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dragon/src/dragonx/image/io/plugins/tga/TGAImageWriter.cc",
			"settings":
			{
				"buffer_size": 4655,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 2775 files for \"TGAOpenUserDef\" (case sensitive)\n\n/Users/yubing/Develop/GitRepos/dragon/third_party/libtga-ex-1.0.0/src/tga.c:\n  103  \n  104  TGA*\n  105: TGAOpenUserDef(void *io,\n  106  			TGAFGetcFunc fgetcFunc, TGAFReadFunc freadFunc,\n  107  			TGAFPutcFunc fputcFunc, TGAFWriteFunc fwriteFunc,\n\n/Users/yubing/Develop/GitRepos/dragon/third_party/libtga-ex-1.0.0/src/tga.h:\n  187  TGA* TGAOpenFd __P((FILE *fd));\n  188  \n  189: TGA* TGAOpenUserDef __P((void *io,\n  190  				TGAFGetcFunc fgetcFunc, TGAFReadFunc freadFunc,\n  191  				TGAFPutcFunc fputcFunc, TGAFWriteFunc fwriteFunc,\n\n2 matches across 2 files\n\n\nSearching 2775 files for \"TGA_CAN_SWAP\" (case sensitive)\n\n/Users/yubing/Develop/GitRepos/dragon/third_party/libtga-1.0.1/ChangeLog:\n   77  2002-03-17  Matthias Brueckner <matbrc@gmx.de>\n   78  	\n   79: 	- added TGA_CAN_SWAP macro\n   80  	\n   81  2002-03-08  Matthias Brueckner <matbrc@gmx.de>\n\n/Users/yubing/Develop/GitRepos/dragon/third_party/libtga-1.0.1/src/tga.h:\n  215  #define TGA_IMG_DATA_SIZE(tga)	((tga)->hdr.width * (tga)->hdr.height * (tga)->hdr.depth / 8)\n  216  #define TGA_SCANLINE_SIZE(tga)	((tga)->hdr.width * (tga)->hdr.depth / 8)\n  217: #define TGA_CAN_SWAP(depth)     (depth == 24 || depth == 32)\n  218  \n  219  #define TGA_IS_MAPPED(tga)      ((tga)->hdr.map_t == 1)\n\n/Users/yubing/Develop/GitRepos/dragon/third_party/libtga-1.0.1/src/tgaread.c:\n  206  	}	\n  207  		\n  208: 	if (TGA_CAN_SWAP(tga->hdr.map_entry) && (flags & TGA_RGB)) {\n  209  		__TGAbgr2rgb(*buf, TGA_CMAP_SIZE(tga), tga->hdr.map_entry / 8);\n  210  	}\n  ...\n  305  	}\n  306  	\n  307: 	if (TGA_CAN_SWAP(tga->hdr.depth) && (flags & TGA_RGB)) {\n  308  		__TGAbgr2rgb(buf + (sln_size * sln), sln_size * n, \n  309  			   tga->hdr.depth / 8);\n\n/Users/yubing/Develop/GitRepos/dragon/third_party/libtga-1.0.1/src/tgawrite.c:\n  171  	off = TGA_CMAP_OFF(tga);\n  172  \n  173: 	if (TGA_CAN_SWAP(tga->hdr.map_entry) && (flags & TGA_RGB)) {\n  174  		__TGAbgr2rgb(buf, n, tga->hdr.map_entry / 8);\n  175  	}\n  ...\n  276  	}\n  277  \n  278: 	if (TGA_CAN_SWAP(tga->hdr.depth) && (flags & TGA_RGB)) \n  279  		__TGAbgr2rgb(buf + (sln * sln_size), sln_size * n, \n  280  			   tga->hdr.depth / 8);\n\n/Users/yubing/Develop/GitRepos/dragon/third_party/libtga-ex-1.0.0/src/tga.h:\n  236  #define TGA_IMG_DATA_SIZE(tga)	((tga)->hdr.width * (tga)->hdr.height * (tga)->hdr.depth / 8)\n  237  #define TGA_SCANLINE_SIZE(tga)	((tga)->hdr.width * (tga)->hdr.depth / 8)\n  238: #define TGA_CAN_SWAP(depth)     (depth == 24 || depth == 32)\n  239  \n  240  #define TGA_IS_MAPPED(tga)      ((tga)->hdr.map_t == 1)\n\n/Users/yubing/Develop/GitRepos/dragon/third_party/libtga-ex-1.0.0/src/tgaread.c:\n  210  	}	\n  211  		\n  212: 	if (TGA_CAN_SWAP(tga->hdr.map_entry) && (flags & TGA_RGB)) {\n  213  		__TGAbgr2rgb(*buf, TGA_CMAP_SIZE(tga), tga->hdr.map_entry / 8);\n  214  	}\n  ...\n  330  	}\n  331  	\n  332: 	if (TGA_CAN_SWAP(tga->hdr.depth) && (flags & TGA_RGB)) {\n  333  		__TGAbgr2rgb(buf + (sln_size * sln), sln_size * n, \n  334  			   tga->hdr.depth / 8);\n\n/Users/yubing/Develop/GitRepos/dragon/third_party/libtga-ex-1.0.0/src/tgawrite.c:\n  182  	off = TGA_CMAP_OFF(tga);\n  183  \n  184: 	if (TGA_CAN_SWAP(tga->hdr.map_entry) && (flags & TGA_RGB)) {\n  185  		__TGAbgr2rgb(buf, n, tga->hdr.map_entry / 8);\n  186  	}\n  ...\n  289  	}\n  290  \n  291: 	if (TGA_CAN_SWAP(tga->hdr.depth) && (flags & TGA_RGB)) \n  292  		__TGAbgr2rgb(buf + (sln * sln_size), sln_size * n, \n  293  			   tga->hdr.depth / 8);\n\n11 matches across 7 files\n",
			"settings":
			{
				"buffer_size": 3489,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "third_party/libtga-ex-1.0.0/src/tgawrite.c",
			"settings":
			{
				"buffer_size": 6258,
				"line_ending": "Unix"
			}
		},
		{
			"file": "third_party/lpng167/pngwrite.c",
			"settings":
			{
				"buffer_size": 74233,
				"line_ending": "Windows"
			}
		},
		{
			"file": "third_party/lpng167/png.c",
			"settings":
			{
				"buffer_size": 148015,
				"line_ending": "Windows"
			}
		},
		{
			"file": "dragon/src/dragonx/image/io/plugins/png/PNGImageWriter.cc",
			"settings":
			{
				"buffer_size": 4609,
				"line_ending": "Unix"
			}
		},
		{
			"file": "third_party/libtga-1.0.1/src/tgawrite.c",
			"settings":
			{
				"buffer_size": 6031,
				"line_ending": "Unix"
			}
		},
		{
			"file": "default.supp",
			"settings":
			{
				"buffer_size": 18266,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/SublimeDragon/dragon_osx.sublime-build",
	"command_palette":
	{
		"height": 27.0,
		"selected_items":
		[
			[
				"ip",
				"Package Control: Install Package"
			],
			[
				"tags",
				"CTags: Rebuild Tags"
			],
			[
				"p",
				"Package Control: Add Repository"
			],
			[
				"inp",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"sub",
				"SublimeGDB: Step Into"
			],
			[
				"subm",
				"SublimeGDB: Step Into"
			],
			[
				"prety",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"pri",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"Sumb",
				"SublimeGDB: Stop Debugging"
			],
			[
				"submi",
				"SublimeGDB: Open Register View"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			],
			[
				"About",
				"About"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 261.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/yubing/Develop/GitRepos/dragon/third_party/libtga-1.0.1/src/tgaread.c",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/image/io/plugins/tga/TGAImageReader.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/image/io/plugins/gif/GIFImageWriter.cc",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/libtga-ex-1.0.0/src/tgaread.c",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragon/lang/gc/ReferenceTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/lang/gc/Reference.h",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/giflib-4.2.3/lib/gifalloc.c",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/giflib-4.2.3/lib/gif_lib.h",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/libtga-ex-1.0.0/src/tga.c",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/lpng167/pngread.c",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragonx/json/JSONObjectTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/lang/Object.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/json/JSONObject.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/util/HashMap.h",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/googletest/src/gtest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/lang/Float.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/lang/String.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/default.supp",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragon/io/FileTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/io/File.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/util/concurrent/locks/ReentrantLock.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/util/Stack.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragon/lang/gc/MemoryAllocTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/default.supp",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragonx/image/io/ImageIOTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/lang/AbstractStringBuilder.cc",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/libjson/json.c",
		"/usr/include/c++/4.2.1/bits/stl_map.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragon/util/HashMapTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/util/ArrayList.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/util/regex/Matcher.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragon/util/ArrayListTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragon/lang/ObjectTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/lang/StringBuffer.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragon/io/FileOutputStreamTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragon/io/FileReaderTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/json/JSONArray.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragonx/json/JSONArray.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/config.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/lang/Integer.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragonx/json/JSONObject.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/io/FileWriter.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/io/OutputStreamWriter.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/io/Writer.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/lang/internal/platform_mac.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/lang/Runnable.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/lang/Comparable.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/io/FileReader.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/io/FileReader.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragon/io/FileInputStreamTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/game/dragon3d-core/src/com/dragon3d/scene/model/shader/Shader.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/lang/gc/GarbageCollector.cc",
		"/Users/yubing/Develop/GitRepos/dragon/game/dragon3d-core/src/com/dragon3d/util/math/Color.cc",
		"/Users/yubing/Develop/GitRepos/dragon/game/dragon3d-core/include/com/dragon3d/util/math/Color.h",
		"/Users/yubing/Develop/GitRepos/dragon/game/docs/gen-code/cpp/Shader.h",
		"/Users/yubing/Develop/GitRepos/dragon/game/dragon3d-core/include/com/dragon3d/scene/model/shader/Shader.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragonx/audio/io/AudioIOTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragonx/xml/io/XMLReaderTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragonx/xml/io/XMLWriterTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/xml/io/XMLReader.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/io/InputStreamReader.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/xml/io/XMLWriter.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/io/FileOutputStream.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/io/native/FileOutputStream_posix.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/io/FileWriter.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/io/OutputStreamWriter.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/lang/Object.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/image/io/plugins/gif/GIFImageReader.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/targets/universal-apple-macosx/debug/dragon_test",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragon/io/FileWriterTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragonx/audio/AudioClip.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/audio/AudioClip.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/image/BufferedImage.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/image/ColorModel.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/image/Image.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragonx/image/RenderedImage.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/image/io/plugins/jpeg/JPEGImageReader.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/audio/io/plugins/AbstractAudioReader.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/util/regex/Pattern.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/io/FileOutputStream.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/io/InputStreamReader.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/lang/System.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragonx/xml/DocumentFactory.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/xml/DocumentFactory.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/xml/DocumentHelper.cc",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/jpeg-9/jerror.c",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragonx/image/io/plugins/jpeg/JPEGImageReader.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/image/io/ImageIO.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/lang/reflect/Type.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/lang/Array.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragon/lang/ThreadTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragon/lang/StringTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragon/lang/internal/SystemClassLoaderTest.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/lang/Class.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/lang/reflect/Method.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/lang/reflect/Constructor.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragonx/audio/AUdioClip.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/util/List.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/io/native/File_posix.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/io/FileInputStream.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/io/native/FileInputStream_posix.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/io/InputStream.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/lang/Exception.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragonx/xml/DocumentHelper.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/lang/gc/ReferenceWithGC.h",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/lang/String.h",
		"/Users/yubing/Develop/GitRepos/dragon/game/dragon3d-core/src/com/dragon3d/launcher/native/osx/AppLauncher.mm",
		"/Users/yubing/Library/Application Support/Sublime Text 2/Packages/User/SublimeDragon.sublime-settings",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/lang/gc/Countable.h",
		"/Users/yubing/Develop/GitRepos/dragon/game/dragon3d-core/include/com/dragon3d/output/OutputDevice.h",
		"/Users/yubing/Develop/GitRepos/dragon/game/dragon3d-core/src/com/dragon3d/util/math/Plane.cc",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/include/dragon/lang/gc/GarbageCollector.h",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/OpenAL-MOB-1.0.0/build_mac/config.h",
		"/Users/yubing/Develop/GitRepos/dragon/game/dragon3d-core/build/Build.scons",
		"/Users/yubing/Develop/GitRepos/dragon/game/dragon3d-examples/build/Build.scons",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/src/dragon/util/concurrent/atomic/AtomicInteger.cc",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/OpenAL-MOB-1.0.0/OpenAL32/include/alu.h",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/OpenAL-MOB-1.0.0/OpenAL32/include/alAuxEffectSlot.h",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/OpenAL-MOB-1.0.0/Alc/helpers.c",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/OpenAL-MOB-1.0.0/OpenAL32/include/alSource.h",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/OpenAL-MOB-1.0.0/Alc/ALc.c",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/OpenAL-MOB-1.0.0/include/AL/alconflict.h",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/mpg123-1.18.1/src/libmpg123/dct64_x86_64_float.S",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/build/Build.scons",
		"/Users/yubing/Develop/GitRepos/dragon/dragon/test/dragon/lang/internal/LibraryTest_mac.cc",
		"/Users/yubing/Develop/GitRepos/dragon/game/dragon3d-core/build/targets/x86-apple-ios/Config.scons",
		"/Users/yubing/Develop/GitRepos/dragon/game/dragon3d-core/src/com/dragon3d/output/graphics/GraphicsOutputController.cc",
		"/Users/yubing/Develop/GitRepos/dragon/third_party/OpenAL-MOB-1.0.0/build_ios/config.h"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/yubing/Develop/GitRepos/dragon/third_party",
			"/Users/yubing/Develop/GitRepos/dragon/third_party/giflib-4.2.3",
			"/Users/yubing/Develop/GitRepos/dragon/third_party/OpenAL-MOB-1.0.0",
			"/Users/yubing/Develop/GitRepos/dragon/third_party/lpng167",
			"/Users/yubing/Develop/GitRepos/dragon/third_party/openal-soft-1.15.1",
			"/Users/yubing/Develop/GitRepos/dragon",
			"/Users/yubing/Develop/GitRepos/dragon/third_party/mpg123-1.18.1",
			"/Users/yubing/Develop/GitRepos/dragon/third_party/libmad-0.15.0b",
			"/Users/yubing/Develop/GitRepos/dragon/third_party/openal-soft-1.15.1",
			"/Users/yubing/Develop/GitRepos/dragon/third_party/mpg123-1.17.0",
			"/Users/yubing/Develop/GitRepos/dragon/third_party/giflib-4.2.3",
			"/Users/yubing/Develop/GitRepos/dragon/third_party/lpng167",
			"*.txt,/Users/yubing/Develop/GitRepos/dragon/third_party/lpng167",
			"/Users/yubing/Develop/GitRepos/dragon/third_party/jpeg-9",
			"index",
			"/Users/yubing/Develop/GitRepos/dragon/third_party/jpeg-9",
			"/Users/yubing/Develop/GitRepos/dragon",
			"/Users/yubing/Develop/GitRepos/dragon/dragon",
			"/Users/yubing/Software/scons-2.2.0",
			"/Users/yubing/Software/scons-2.2.0/engine/SCons"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"TGA_CAN_SWAP",
			"TGAOpenUserDef",
			"MakeMapObject",
			");\n",
			"MakeMapObject",
			"release",
			"config.h",
			"HAVE_NEON",
			"SelectHrtfMixer",
			"AL_ALEXT_PROTOTYPES",
			"PNG_FILTER_OPTIMIZATIONS",
			"png_init_filter_functions",
			"png_init_filter_functions_neon",
			"wrap_BufferSamples",
			"not support clip format",
			"_mark",
			"ByteArrayInputStream",
			"mpg123_read",
			"MPG123_FORCE_FLOAT",
			"MPG123_ENC_SIGNED_16",
			"MPG123_DONE",
			"force_skip",
			"MPG123_OK",
			"mpg123_replace_reader_handle",
			"mpg123_replace_reader",
			"file://localhost/Users/yubing/Downloads/mpg123-1.18.1/src/libmpg123/",
			"mad_stream_buffer",
			"MAD_FLOW_BREAK",
			"equals",
			"alutLoadWAVFile",
			"DecomposeUserFormat",
			"alBufferData",
			"RESTRICT",
			"DevFmtChannelsString",
			"AL_ALEXT_PROTOTYPES",
			"alGenFilters",
			"Alc/",
			"OpenAL32/",
			"int",
			"_FILE_OFFSET_BITS",
			"libmpg123/",
			"mpg123_close",
			"MPG123_LARGENAME",
			"mpg123_close",
			"G72x/",
			"GSM610/",
			"WIN_VERSION_FILE",
			"COMMON",
			"* ",
			"mpg123_replace_reader_handle",
			"mpg123_open_handle",
			"OPT_GENERIC",
			"defopt",
			"ExpColorMapSize",
			"QuitGifError",
			"GifRow",
			"InterlacedOffset",
			"PrintGifError",
			"ColorMap",
			"png_set_write_fn",
			"user_IO_flush_function",
			"user_read_fn",
			"JCS_RGB",
			"Index",
			"jpeg_set_quality",
			"jpeg_stdio_dest",
			"JOCTET",
			"jpeg_source_mgr",
			"j_decompress_ptr",
			"jpeg_source_mgr",
			"dg_false",
			"dg_true",
			"dg_boolean",
			"dg_char",
			"dg_int",
			"prettyprint",
			"json_printer",
			"JSON_ERROR_BAD_CHAR",
			"dg_double",
			"dg_float",
			"dg_int",
			"dg_float",
			"dg_double",
			"dg_float",
			"dg_int",
			"printchannel",
			".o",
			"jmemdos.c",
			"dg_byte",
			"dg_char",
			"dg_boolean",
			"dg_int",
			"dg_boolean",
			"Vector3",
			"hasChanged",
			"double",
			"getW()",
			"getX()",
			"getZ()",
			"getY()",
			"GL",
			"DG",
			"DGubyte",
			"DGuint",
			"DGfloat",
			"DGColor",
			"DGubyte",
			"DGuint",
			"DGfloat",
			"Display",
			"NPT_EXTRA_LIBS",
			"E",
			"DGfloat",
			"DGsizei",
			"DGint",
			"	",
			"int",
			"long",
			"AtomicInteger",
			"	",
			"print",
			"os",
			"DeclareBuildDir",
			"getReturnType",
			"ParamInfo",
			"float",
			"char",
			"size_t"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"markPos",
			"ByteArrayAudioInputStream",
			"mp3_force_skip",
			"",
			"index",
			"false",
			"true",
			"bool",
			"wchar_u",
			"int",
			"double",
			"float",
			"int",
			"float",
			"double",
			"float",
			"int",
			".c",
			"byte",
			"wchar_u",
			"bool",
			"int",
			"bool",
			"const Vector3&",
			"changed",
			"float",
			"w",
			"x",
			"z",
			"y",
			"",
			"dg_byte",
			"int",
			"float",
			"Color",
			"dg_byte",
			"int",
			"float",
			"GraphicsDevice",
			"float",
			"int",
			"dg_long",
			"AtomicLong",
			"ReturnInfo",
			"double",
			"float",
			"char",
			"size_t",
			"short",
			"spaces",
			"space",
			"NameSpace",
			"Library",
			"GlobTargetSources",
			"SmartArrayPointer",
			"k",
			"t",
			"",
			"dg_int",
			"count",
			"size",
			"dg_true",
			"dg_false",
			"dg_boolean",
			"dg_int",
			"Matcher",
			"Pattern",
			"PatternSyntaxException",
			"RuntimeException",
			"IllegalArgumentException"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "dragon/src/dragonx/image/io/plugins/gif/GIFImageReader.cc",
					"settings":
					{
						"buffer_size": 8851,
						"regions":
						{
						},
						"selection":
						[
							[
								3818,
								3818
							]
						],
						"settings":
						{
							"last_edits":
							{
								"5446":
								{
									"a": 3818.0,
									"b": 3818.0
								}
							},
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1654.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "dragon/src/dragonx/image/io/plugins/tga/TGAImageReader.cc",
					"settings":
					{
						"buffer_size": 5680,
						"regions":
						{
						},
						"selection":
						[
							[
								4125,
								4129
							]
						],
						"settings":
						{
							"last_edits":
							{
								"5470":
								{
									"a": 4125.0,
									"b": 4129.0
								}
							},
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1954.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "third_party/libtga-ex-1.0.0/src/tga.c",
					"settings":
					{
						"buffer_size": 3364,
						"regions":
						{
						},
						"selection":
						[
							[
								2309,
								2309
							]
						],
						"settings":
						{
							"last_edits":
							{
								"5497":
								{
									"a": 2309.0,
									"b": 2309.0
								}
							},
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 176.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "dragon/src/dragonx/image/BufferedImage.cc",
					"settings":
					{
						"buffer_size": 4998,
						"regions":
						{
						},
						"selection":
						[
							[
								1377,
								1381
							]
						],
						"settings":
						{
							"last_edits":
							{
								"5503":
								{
									"a": 1232.0,
									"b": 1232.0
								}
							},
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1803.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "dragon/src/dragon/lang/Object.cc",
					"settings":
					{
						"buffer_size": 2976,
						"regions":
						{
						},
						"selection":
						[
							[
								1544,
								1544
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 648.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "dragon/src/dragonx/image/io/plugins/bmp/BMPImageWriter.cc",
					"settings":
					{
						"buffer_size": 15001,
						"regions":
						{
						},
						"selection":
						[
							[
								6580,
								6580
							]
						],
						"settings":
						{
							"last_edits":
							{
								"5572":
								{
									"a": 7196.0,
									"b": 7196.0
								}
							},
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3006.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "dragon/src/dragonx/image/io/plugins/jpeg/JPEGImageReader.cc",
					"settings":
					{
						"buffer_size": 7023,
						"regions":
						{
						},
						"selection":
						[
							[
								6369,
								6369
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2608.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "dragon/test/dragonx/image/io/ImageIOTest.cc",
					"settings":
					{
						"buffer_size": 21302,
						"regions":
						{
						},
						"selection":
						[
							[
								13330,
								13330
							]
						],
						"settings":
						{
							"last_edits":
							{
								"5718":
								{
									"a": 13330.0,
									"b": 13330.0
								}
							},
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7221.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "dragon/src/dragonx/image/io/plugins/gif/GIFImageWriter.cc",
					"settings":
					{
						"buffer_size": 17910,
						"regions":
						{
						},
						"selection":
						[
							[
								17845,
								17845
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6379.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "third_party/giflib-4.2.3/lib/egif_lib.c",
					"settings":
					{
						"buffer_size": 37434,
						"regions":
						{
						},
						"selection":
						[
							[
								24242,
								24242
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9790.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "third_party/giflib-4.2.3/lib/gifalloc.c",
					"settings":
					{
						"buffer_size": 14508,
						"regions":
						{
						},
						"selection":
						[
							[
								2992,
								2992
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 970.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "third_party/libtga-ex-1.0.0/src/tgaread.c",
					"settings":
					{
						"buffer_size": 7511,
						"regions":
						{
						},
						"selection":
						[
							[
								6287,
								6287
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3874.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "dragon/src/dragonx/image/io/plugins/tga/TGAImageWriter.cc",
					"settings":
					{
						"buffer_size": 4655,
						"regions":
						{
						},
						"selection":
						[
							[
								4062,
								4062
							]
						],
						"settings":
						{
							"last_edits":
							{
								"5769":
								{
									"a": 3870.0,
									"b": 3870.0
								}
							},
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1828.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"settings":
					{
						"buffer_size": 3489,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										164,
										178
									],
									[
										444,
										458
									],
									[
										833,
										845
									],
									[
										1185,
										1197
									],
									[
										1421,
										1433
									],
									[
										1598,
										1610
									],
									[
										1879,
										1891
									],
									[
										2037,
										2049
									],
									[
										2457,
										2469
									],
									[
										2696,
										2708
									],
									[
										2873,
										2885
									],
									[
										3157,
										3169
									],
									[
										3315,
										3327
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								622,
								622
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"last_edits":
							{
								"6000":
								{
									"a": 622.0,
									"b": 622.0
								}
							},
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 252.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "third_party/libtga-ex-1.0.0/src/tgawrite.c",
					"settings":
					{
						"buffer_size": 6258,
						"regions":
						{
						},
						"selection":
						[
							[
								1306,
								1306
							]
						],
						"settings":
						{
							"last_edits":
							{
								"5958":
								{
									"a": 2423.0,
									"b": 2423.0
								}
							},
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 498.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "third_party/lpng167/pngwrite.c",
					"settings":
					{
						"buffer_size": 74233,
						"regions":
						{
						},
						"selection":
						[
							[
								16534,
								16534
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6556.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "third_party/lpng167/png.c",
					"settings":
					{
						"buffer_size": 148015,
						"regions":
						{
						},
						"selection":
						[
							[
								10944,
								10944
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4530.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "dragon/src/dragonx/image/io/plugins/png/PNGImageWriter.cc",
					"settings":
					{
						"buffer_size": 4609,
						"regions":
						{
						},
						"selection":
						[
							[
								2423,
								2423
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 938.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "third_party/libtga-1.0.1/src/tgawrite.c",
					"settings":
					{
						"buffer_size": 6031,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 909.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "default.supp",
					"settings":
					{
						"buffer_size": 18266,
						"regions":
						{
						},
						"selection":
						[
							[
								18266,
								18266
							]
						],
						"settings":
						{
							"last_edits":
							{
								"6096":
								{
									"a": 18266.0,
									"b": 18266.0
								}
							},
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13578.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 428.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"tgaw",
				"third_party/libtga-ex-1.0.0/src/tgawrite.c"
			],
			[
				"tgawrite.c",
				"third_party/libtga-ex-1.0.0/src/tgawrite.c"
			],
			[
				"tgaimagewriter.cc",
				"dragon/src/dragonx/image/io/plugins/tga/TGAImageWriter.cc"
			],
			[
				"tgaread.c",
				"third_party/libtga-ex-1.0.0/src/tgaread.c"
			],
			[
				"gifimagewriter.cc",
				"dragon/src/dragonx/image/io/plugins/gif/GIFImageWriter.cc"
			],
			[
				"imageiotest.cc",
				"dragon/test/dragonx/image/io/ImageIOTest.cc"
			],
			[
				"tgaimagereader.cc",
				"dragon/src/dragonx/image/io/plugins/tga/TGAImageReader.cc"
			],
			[
				"tga.c",
				"third_party/libtga-ex-1.0.0/src/tga.c"
			],
			[
				"tgaread",
				"third_party/libtga-ex-1.0.0/src/tgaread.c"
			],
			[
				"gifimagereader.cc",
				"dragon/src/dragonx/image/io/plugins/gif/GIFImageReader.cc"
			],
			[
				"tagread.c",
				"third_party/lpng167/pngread.c"
			],
			[
				"jsonobject",
				"dragon/src/dragonx/json/JSONObject.cc"
			],
			[
				"jsonobject.cc",
				"dragon/src/dragonx/json/JSONObject.cc"
			],
			[
				"stack.h",
				"dragon/include/dragon/util/Stack.h"
			],
			[
				"stack.cc",
				"dragon/src/dragon/util/concurrent/locks/ReentrantLock.cc"
			],
			[
				"file.cc",
				"dragon/src/dragon/io/File.cc"
			],
			[
				"filetest.cc",
				"dragon/test/dragon/io/FileTest.cc"
			],
			[
				"jsonobjecttest.cc",
				"dragon/test/dragonx/json/JSONObjectTest.cc"
			],
			[
				"string.cc",
				"dragon/src/dragon/lang/String.cc"
			],
			[
				"float.cc",
				"dragon/src/dragon/lang/Float.cc"
			],
			[
				"hashmaptest.cc",
				"dragon/test/dragon/util/HashMapTest.cc"
			],
			[
				"object.cc",
				"dragon/src/dragon/lang/Object.cc"
			],
			[
				"filetest",
				"dragon/test/dragon/io/FileTest.cc"
			],
			[
				"jsonobjecttest",
				"dragon/test/dragonx/json/JSONObjectTest.cc"
			],
			[
				"objecttest.cc",
				"dragon/test/dragon/lang/ObjectTest.cc"
			],
			[
				"arraylisttest",
				"dragon/test/dragon/util/ArrayListTest.cc"
			],
			[
				"matcher.cc",
				"dragon/src/dragon/util/regex/Matcher.cc"
			],
			[
				"hashmap",
				"dragon/test/dragon/util/HashMapTest.cc"
			],
			[
				"hashmap.h",
				"dragon/include/dragon/util/HashMap.h"
			],
			[
				"arraylist.h",
				"dragon/include/dragon/util/ArrayList.h"
			],
			[
				"jsonarray.h",
				"dragon/include/dragonx/json/JSONArray.h"
			],
			[
				"jsonarray.cc",
				"dragon/src/dragonx/json/JSONArray.cc"
			],
			[
				"filereadertest.cc",
				"dragon/test/dragon/io/FileReaderTest.cc"
			],
			[
				"json.c",
				"third_party/libjson/json.c"
			],
			[
				"filereadertest",
				"dragon/test/dragon/io/FileReaderTest.cc"
			],
			[
				"fileoutputstreamtest",
				"dragon/test/dragon/io/FileOutputStreamTest.cc"
			],
			[
				"hashm",
				"dragon/include/dragon/util/HashMap.h"
			],
			[
				"",
				"dragon/src/dragonx/json/JSONObject.cc"
			],
			[
				"jsonob",
				"dragon/include/dragonx/json/JSONObject.h"
			],
			[
				"shader",
				"game/dragon3d-core/include/com/dragon3d/scene/model/shader/Shader.h"
			],
			[
				"color.h",
				"game/dragon3d-core/include/com/dragon3d/util/math/Color.h"
			],
			[
				"color.cc",
				"game/dragon3d-core/src/com/dragon3d/util/math/Color.cc"
			],
			[
				"h",
				"dragon/include/dragon/util/HashMap.h"
			],
			[
				"jsonobj",
				"dragon/src/dragonx/json/JSONObject.cc"
			],
			[
				"jsonobjecttest.c",
				"dragon/test/dragonx/json/JSONObjectTest.cc"
			],
			[
				"filereader.cc",
				"dragon/src/dragon/io/FileReader.cc"
			],
			[
				"outputstreamwriter",
				"dragon/src/dragon/io/OutputStreamWriter.cc"
			],
			[
				"filew",
				"dragon/include/dragon/io/FileWriter.h"
			],
			[
				"filewriter",
				"dragon/src/dragon/io/FileWriter.cc"
			],
			[
				"filewriter.cc",
				"dragon/src/dragon/io/FileWriter.cc"
			],
			[
				"outputstreamwriter.cc",
				"dragon/src/dragon/io/OutputStreamWriter.cc"
			],
			[
				"xmlwriter.cc",
				"dragon/src/dragonx/xml/io/XMLWriter.cc"
			],
			[
				"inputstreamreader.cc",
				"dragon/src/dragon/io/InputStreamReader.cc"
			],
			[
				"xmlreader.cc",
				"dragon/src/dragonx/xml/io/XMLReader.cc"
			],
			[
				"imageiotest",
				"dragon/test/dragonx/image/io/ImageIOTest.cc"
			],
			[
				"audioclip.cc",
				"dragon/src/dragonx/audio/AudioClip.cc"
			],
			[
				"audioclip",
				"dragon/include/dragonx/audio/AudioClip.h"
			],
			[
				"audioiotest.cc",
				"dragon/test/dragonx/audio/io/AudioIOTest.cc"
			],
			[
				"gifimagewriter.c",
				"dragon/src/dragonx/image/io/plugins/gif/GIFImageWriter.cc"
			],
			[
				"audioiotest",
				"dragon/test/dragonx/audio/io/AudioIOTest.cc"
			],
			[
				"abstractaudioreader.cc",
				"dragon/src/dragonx/audio/io/plugins/AbstractAudioReader.cc"
			],
			[
				"jpegimagereader.cc",
				"dragon/src/dragonx/image/io/plugins/jpeg/JPEGImageReader.cc"
			],
			[
				"imagebu",
				"dragon/src/dragonx/image/BufferedImage.cc"
			],
			[
				"imageio.cc",
				"dragon/src/dragonx/image/io/ImageIO.cc"
			],
			[
				"jpegimagereader.h",
				"dragon/include/dragonx/image/io/plugins/jpeg/JPEGImageReader.h"
			],
			[
				"bufferedimage.cc",
				"dragon/src/dragonx/image/BufferedImage.cc"
			],
			[
				"colormodel.cc",
				"dragon/src/dragonx/image/ColorModel.cc"
			],
			[
				"documenthelper.cc",
				"dragon/src/dragonx/xml/DocumentHelper.cc"
			],
			[
				"documentfactory.cc",
				"dragon/src/dragonx/xml/DocumentFactory.cc"
			],
			[
				"documentfactory",
				"dragon/include/dragonx/xml/DocumentFactory.h"
			],
			[
				"system.cc",
				"dragon/src/dragon/lang/System.cc"
			],
			[
				"arraylist",
				"dragon/include/dragon/util/ArrayList.h"
			],
			[
				"patt",
				"dragon/src/dragon/util/regex/Pattern.cc"
			],
			[
				"fileoutputcc",
				"dragon/src/dragon/io/FileOutputStream.cc"
			],
			[
				"float.h",
				"dragon/include/dragon/lang/Float.h"
			],
			[
				"thro",
				"dragon/src/dragon/lang/Throwable.cc"
			],
			[
				"throw",
				"dragon/include/dragon/lang/Throwable.h"
			],
			[
				"system",
				"dragon/src/dragon/lang/System.cc"
			],
			[
				"dragon_te",
				"dragon/targets/universal-apple-macosx/debug/dragon_test"
			],
			[
				"string.h",
				"dragon/include/dragon/lang/String.h"
			],
			[
				"abstr",
				"dragon/src/dragon/lang/AbstractStringBuilder.cc"
			],
			[
				"string",
				"dragon/src/dragon/lang/String.cc"
			],
			[
				"pattersy",
				"dragon/include/dragon/util/regex/PatternSyntaxException.h"
			],
			[
				"pattersya",
				"dragon/src/dragon/util/regex/PatternSyntaxException.cc"
			],
			[
				"stringtest",
				"dragon/test/dragon/lang/StringTest.cc"
			],
			[
				"reget",
				"dragon/test/dragon/util/regex/RegexTest.cc"
			],
			[
				"regete",
				"dragon/test/dragon/util/regex/RegexTest.cc"
			],
			[
				"patter",
				"dragon/test/dragon/util/regex/PatternSyntaxExceptionTest.cc"
			],
			[
				"ill",
				"dragon/test/dragon/lang/IllegalArgumentExceptionTest.cc"
			],
			[
				"exceptiont",
				"dragon/test/dragon/lang/ExceptionTest.cc"
			],
			[
				"runtimeexce",
				"dragon/test/dragon/lang/RuntimeExceptionTest.cc"
			],
			[
				"patsyatc",
				"dragon/test/dragon/util/regex/PatternSyntaxExceptionTest.cc"
			],
			[
				"stringt",
				"dragon/test/dragon/lang/StringTest.cc"
			],
			[
				"matcher",
				"dragon/src/dragon/util/regex/Matcher.cc"
			],
			[
				"patterns",
				"dragon/test/dragon/util/regex/PatternSyntaxExceptionTest.cc"
			],
			[
				"macher",
				"dragon/include/dragon/util/regex/Matcher.h"
			],
			[
				"regx",
				"dragon/test/dragon/util/regex/RegexTest.cc"
			],
			[
				"pcred",
				"third_party/pcre-8.33/pcredemo.c"
			],
			[
				"config.h",
				"dragon/include/dragon/config.h"
			],
			[
				"regt",
				"dragon/test/dragon/util/regex/RegexTest.cc"
			],
			[
				"conv",
				"third_party/libunicode-0.4/convert.h"
			],
			[
				"s",
				"dragon/src/dragon/lang/String.cc"
			],
			[
				"regexte",
				"dragon/test/dragon/util/regex/RegexTest.cc"
			],
			[
				"reg",
				"dragon/test/dragon/util/regex/RegexTest.cc"
			],
			[
				"stringte",
				"dragon/test/dragon/lang/StringTest.cc"
			],
			[
				"array",
				"dragon/include/dragon/lang/Array.h"
			],
			[
				"arrays",
				"dragon/include/dragon/lang/Arrays.h"
			],
			[
				"arr",
				"dragon/include/dragon/lang/Array.h"
			],
			[
				"st.cc",
				"dragon/src/dragon/lang/String.cc"
			],
			[
				"mr.h",
				"dragon/include/dragon/util/regex/MatchResult.h"
			],
			[
				"build",
				"dragon/build/Build.scons"
			],
			[
				"pcrede",
				"third_party/pcre-8.33/pcredemo.c"
			],
			[
				"pcredemo",
				"third_party/pcre-8.33/pcredemo.c"
			],
			[
				"stringc",
				"dragon/src/dragon/lang/String.cc"
			],
			[
				"pattern",
				"dragon/src/dragon/util/regex/Pattern.cc"
			],
			[
				"pcre",
				"third_party/pcre-8.33/pcre.h"
			],
			[
				"runtimee",
				"dragon/test/dragon/lang/RuntimeExceptionTest.cc"
			],
			[
				"runtimeex",
				"dragon/src/dragon/lang/RuntimeException.cc"
			],
			[
				"extest",
				"third_party/cppunit-1.10.2/examples/cppunittest/ExceptionTest.cpp"
			],
			[
				"rgext",
				"dragon/test/dragon/util/regex/RegexTest.cc"
			],
			[
				"build.s",
				"dragon/build/Build.scons"
			],
			[
				"patternsyn",
				"dragon/include/dragon/util/regex/PatternSyntaxException.h"
			],
			[
				"ille",
				"dragon/src/dragon/lang/IllegalArgumentException.cc"
			],
			[
				"excep",
				"dragon/src/dragon/lang/Exception.cc"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 237.0,
	"status_bar_visible": true
}
