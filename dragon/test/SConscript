# -*- python -*-
# Copyright 2013 the original author or authors.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# **********************************************************************
# Author:      Owen Wu/wcw/yubing
# Email:       yubing744@163.com
# Created:     2013/03/31
# **********************************************************************
 
LIBRARY_FLAGS = {
  'all' : {
     'LIBS' : ['cppunit', "dragon"]	
  },
  'gcc': {
	'CPPPATH' : [
		"/usr/local/include",
		"../include"
	],
	'LIBPATH' : [
		"/usr/local/lib",
		"../lib/gcc"				
	],
	'CPPDEFINES' : ['USING_DRAGON_SHARED'],
	'LIBS' : ['cppunit', "dragon"],
	'CXXFLAGS' : [],
	'ARFLAGS' : [],	
	'LINKFLAGS' : []
  },
  'msvc': {
	'CPPPATH' : [
		"../include",
		"../../third_party/cppunit-1.10.2/include"
	],
	'LIBPATH' : [
		"../../third_party/cppunit-1.10.2/lib",
		"../lib/msvc"			
	],
	'LIBS' : ['cppunit_dll_x64', "dragon"],
	'CXXFLAGS' : ['/EHsc'],	
	'CPPDEFINES' : ['USING_DRAGON_SHARED'],
	'ARFLAGS' : ['/MACHINE:X64'],
	'LINKFLAGS' : ['/MACHINE:X64']	
  }
}

def Build(env):
	toolchain = env['toolchain'] 
	
	env.Append(CPPPATH = LIBRARY_FLAGS[toolchain]['CPPPATH'])
	env.Append(LIBPATH = LIBRARY_FLAGS[toolchain]['LIBPATH'])
	env.Append(LIBS = LIBRARY_FLAGS[toolchain]['LIBS'])
	env.Append(CXXFLAGS = LIBRARY_FLAGS[toolchain]['CXXFLAGS'])
	env.Append(ARFLAGS = LIBRARY_FLAGS[toolchain]['ARFLAGS'])
	env.Append(LINKFLAGS = LIBRARY_FLAGS[toolchain]['LINKFLAGS'])
			
	src_files = Split("""
		dragon/lang/ObjectTest.cc
		dragon/lang/StringTest.cc
		dragon/lang/MathTest.cc
		TestMain.cc
	""")
	
	test_files = env.Program(target='dragon_test', source=src_files)
	env.Install('../lib/' + toolchain, test_files)	


# We disable deprecation warnings because we need to be able to use
# env.Copy without getting warnings for compatibility with older
# version of scons.  Also, there's a bug in some revisions that
# doesn't allow this flag to be set, so we swallow any exceptions.
# Lovely.
try:
  SetOption('warn', 'no-deprecated')
except:
  pass
 
Import('env')
Build(env.Copy())

